FROM openjdk:8-jdk AS BOOTSTRAP

# ----
# Install Maven
RUN apt-get install curl tar bash
ARG MAVEN_VERSION=3.3.9
ARG USER_HOME_DIR="/root"
RUN mkdir -p /usr/share/maven && \
curl -fsSL http://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar -xzC /usr/share/maven --strip-components=1 && \
ln -s /usr/share/maven/bin/mvn /usr/bin/mvn
ENV MAVEN_HOME /usr/share/maven
ENV MAVEN_CONFIG "$USER_HOME_DIR/.m2"
ENV MAVEN_OPTS="-XX:+TieredCompilation -XX:TieredStopAtLevel=1"

# Source And Target
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app

ADD support/maven-settings.xml $MAVEN_CONFIG/settings.xml

# Resolve Dependencies
COPY support/bootstrap/pom.xml /usr/src/app/
RUN mvn --fail-never -B dependency:resolve

# Build And Install
COPY support/bootstrap/ ./
RUN mvn clean install

# Target
RUN mkdir -p /installs
RUN cp dist/*deb /installs

# =============================================================================================================================================

FROM jboss/base-jdk:8

# ARG VERSION=20180426T152435Z-001
ARG VERSION=11.2.0.0


# Alien
USER root
RUN yum -y install epel-release && yum clean all
RUN rpm --import http://li.nux.ro/download/nux/RPM-GPG-KEY-nux.ro
RUN rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm
RUN yum -y update && yum -y install alien
USER jboss


RUN rm -f RulesPalette.zip

ENV URL=http://repo.pennassurancesoftware.com/artifactory/public/com/adminserver/RulesPalette/${VERSION}/RulesPalette-${VERSION}.zip
RUN echo Download: $URL
RUN curl -sSL "$URL" -o RulesPalette.zip
RUN unzip RulesPalette.zip
RUN ls -lah

ENV PALETTE_HOME=/opt/jboss/OIRP



RUN rm -Rf ${PALETTE_HOME}/PaletteEnvironments/RulesIDE/*
RUN mkdir -p ${PALETTE_HOME}/PaletteEnvironments/RulesIDE/configuration
COPY palette/environments/configuration/ ${PALETTE_HOME}/PaletteEnvironments/RulesIDE/configuration/
RUN mkdir -p ./environment.templates/DOCKER
COPY palette/environment.templates/DOCKER/ ${PALETTE_HOME}/environment.templates/DOCKER/

####### Added For V11
ENV RULES_PALETTE_HOME=/opt/jboss
RUN rm -Rf ${RULES_PALETTE_HOME}/AppData/Roaming/Oracle/asgraphicruleside/PaletteEnvironments/RulesIDE/*
RUN mkdir -p ${RULES_PALETTE_HOME}/AppData/Roaming/Oracle/asgraphicruleside/PaletteEnvironments/RulesIDE/configuration
COPY palette/environments/configuration/ ${RULES_PALETTE_HOME}/AppData/Roaming/Oracle/asgraphicruleside/PaletteEnvironments/RulesIDE/configuration

#######

RUN rm -Rf ./etc/*
COPY palette/etc/ ${PALETTE_HOME}/etc/
RUN chmod 755 ${PALETTE_HOME}/bin/asgraphicruleside

# Bootstrap
RUN mkdir -p /opt/jboss/installs
COPY --from=BOOTSTRAP /installs/ /opt/jboss/installs/
USER root
RUN cd /opt/jboss/installs && dpkg -i *.deb
USER jboss

# Environment
ENV PALETTE_URL=
ENV DB_HOST=
ENV DB_NAME=
ENV DB_USER=
ENV DB_PASSWORD=
ENV PALETTE_URL=http://oipa:9080/PaletteConfig
ENV IVS=
ENV IVS_DB_NAME=

# Run Script
RUN mkdir -p /opt/jboss/scripts
WORKDIR /opt/jboss/scripts
COPY palette/run.sh run.sh
USER root
RUN chmod 755 run.sh
USER jboss

ENTRYPOINT [ "/opt/jboss/scripts/run.sh" ]

# Build
# docker build -t local/palette -f Dockerfile.palette .

# Run
# docker run -it --rm --network oipa_default -v /tmp/.X11-unix:/tmp/.X11-unix -e DISPLAY=unix$DISPLAY -e PALETTE_URL=http://oipa:9080/PaletteConfig -e DB_USER=sa -e DB_PASSWORD=SQLServerPass1 --device /dev/snd --name palette local/palette
